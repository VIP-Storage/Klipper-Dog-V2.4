[gcode_macro PURGE_NOZZLE]
variable_purge_len:            40	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      230            ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             2            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
gcode:
  SAVE_GCODE_STATE NAME=PRE_PURGE_STATE
  M83      ; relative mode
  G1 E{purge_len} F{purge_spd}
  G1 E-{purge_ret} F{purge_spd * 5}
  G4 P{ooze_dwell * 1000}
  G92 E0   ; reset extruder
  RESTORE_GCODE_STATE NAME=PRE_PURGE_STATE

[gcode_macro PUBLISH_ALERT]
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/alert",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=True)}


[gcode_macro _NOTIFY_ENCODER_ISSUE]
gcode:
  PUBLISH_ALERT PAYLOAD=extruder_clogged
  _ERCF_ENCODER_MOTION_ISSUE

[gcode_macro PRINT_START]
gcode:
    CLEAR_PAUSE
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if "BED" in params %}
    	{% set BED_TEMP = params.BED|default(110)|float %}
    {% elif "material_bed_temperature_layer_0" in params %}
    	{% set BED_TEMP = params.material_bed_temperature_layer_0|default(110)|float %}
    {% else %}
    	{% set BED_TEMP = params.BED_TEMP|default(110)|float %}
    {% endif %}


    {% if "HOTEND" in params %}
    	{% set EXTRUDER_TEMP = params.HOTEND|default(245)|float %}    
    {% elif "material_print_temperature_layer_0" in params %}
        {% set EXTRUDER_TEMP = params.material_print_temperature_layer_0|default(245)|float %}
    {% elif "EXTRUDER" in params %}
        {% set EXTRUDER_TEMP = params.EXTRUDER|default(245)|float %}
    {% else %}
        {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
    {% endif %}

    M140 S{BED_TEMP}                                                       ; Set bed temperature
    M104 S{EXTRUDER_TEMP}                                                  ; Set nozzle temperature

    BEDFANSFAST

    {% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}      ; Home all axes
    ERCF_HOME

    M109 S{EXTRUDER_TEMP}                                                  ; Wait for nozzle to reach temperature
    M190 S{BED_TEMP}                                                       ; Wait for bed to reach temperature

    Attach_Probe_Lock
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    CALIBRATE_Z
    Dock_Probe_Unlock

    SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1


[gcode_macro PRINT_END]
gcode:
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    TURN_OFF_HEATERS
    M107                                     ; turn off fan
    _TOOLHEAD_PARK_PAUSE_CANCEL
    {% if unload|int == 1 %}
      ERCF_EJECT
    {% endif %}
    PUBLISH_ALERT PAYLOAD=print_ended

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set bed_position = params.BED_POSITION|default('None') %}
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("QG Level") }
    {% endif %}

    _CheckProbe action=query
        G90
    Attach_Probe
    _KLICKY_STATUS_LEVELING

    {% if bed_position != 'None' %}
      BASE_CALIBRATE_Z BED_POSITION={bed_position}
    {% else %}
      BASE_CALIBRATE_Z
    {% endif %}
     Dock_Probe

  
  